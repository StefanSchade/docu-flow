# Stage 1: Build Stage
FROM ubuntu:latest as builder

# Install build dependencies
RUN apt-get update && \
    apt-get install -y \
    python3 \
    python3-pip \
    python3-venv

# Set the working directory
WORKDIR /workspace

# Copy the application code and requirements
COPY src/ /workspace/src/
COPY requirements.txt /workspace/

# Create a virtual environment and install dependencies
RUN python3 -m venv /workspace/venv && \
    /bin/bash -c "source /workspace/venv/bin/activate && \
    pip install --no-cache-dir -r /workspace/requirements.txt"

# Stage 2: Production Image
FROM ubuntu:latest

# Install runtime dependencies
RUN apt-get update && \
    apt-get install -y \
    ca-certificates \
    libenchant-2-2 \
    libglib2.0-dev \
    tesseract-ocr \
    libtesseract-dev \
    && apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Create a non-root user 'appuser'
RUN groupadd -r appuser && useradd -m -r -g appuser appuser

# Set the working directory for the application
WORKDIR /workspace

# Copy the virtual environment and application code from the build stage
COPY --from=builder /workspace/venv /workspace/venv
COPY --from=builder /workspace/src /workspace/src

# Ensure the 'appuser' user owns the workspace
RUN chown -R appuser:appuser /workspace

# Switch to the 'appuser' user
USER appuser

# Set the entrypoint to your application
CMD ["/workspace/venv/bin/python", "/workspace/src/entrypoint.py"]

